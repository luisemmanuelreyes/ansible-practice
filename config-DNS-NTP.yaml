---
- name: Configure DNS, hostname and NTP
  hosts: all
  gather_facts: false
  become: yes
  vars_files:
    - vault.yml

  tasks:

    # - name: Read current hostname
    #   ansible.builtin.slurp:
    #     src: /etc/hostname
    #   register: current_hostname
    #   tags:
    #   - hostname

    # - name: Extract short hostname
    #   set_fact:
    #     short_hostname: "{{ (current_hostname['content'] | b64decode | regex_replace('\\..*$', '')).strip() }}"
    #   tags:
    #   - hostname

    # - name: Set the FQDN
    #   shell: "hostnamectl set-hostname '{{ short_hostname }}.dev.rocketsoftware.com'"
    #   ignore_errors: yes
    #   tags:
    #   - hostname

    # - name: Verify new hostname
    #   shell: hostnamectl | grep "Static hostname"
    #   register: hostname_output
    #   tags:
    #   - hostname

    # - name: Display new hostname
    #   debug:
    #     msg: "New{{ hostname_output.stdout }}"
    #   tags:
    #   - hostname

    # - name: Add DNS and NTP mappings to /etc/hosts
    #   ansible.builtin.lineinfile: 
    #     dest: /etc/hosts
    #     line: '{{ item }}'
    #   with_items:
    #     - '192.168.24.12  DNSServerName'
    #     - '192.168.98.133  NTPServerName'
    #   tags: 
    #   - hostname

    # - name: Reboot to apply hostname changes for servers without hostnamectl
    #   reboot:
    #     reboot_timeout: 600
    #   tags: 
    #   - hostname

    - name: Check if /etc/resolv.conf is a symlink
      stat:
        path: /etc/resolv.conf
      register: resolv_stat
      ignore_errors: yes
      tags:
      - dns 

    - name: Remove symlink if it exists
      file:
        path: /etc/resolv.conf
        state: absent
      when: resolv_stat.stat.islnk
      tags:
      - dns 

    - name: Backup existing /etc/resolv.conf
      copy:
        src: /etc/resolv.conf
        dest: /etc/resolv.conf.bak
        backup: yes
      tags:
      - dns 

    - name: Create new /etc/resolv.conf
      copy:
        content: |
          search dev.rocketsoftware.com
          domain dev.rocketsoftware.com
          nameserver 10.17.38.11
          nameserver 10.17.38.12
        dest: /etc/resolv.conf
        mode: 0644  
      tags:
      - dns 

    - name: Check if /etc/NetworkManager/NetworkManager.conf exists 
      stat: 
        path: /etc/NetworkManager/NetworkManager.conf 
      register: nm_conf
      tags:
      - dns
      
    - name: Print message if the file does not exist 
      debug: 
        msg: "/etc/NetworkManager/NetworkManager.conf Does Not Exist." 
      when: not nm_conf.stat.exists
      tags:
      - dns

    - name: Add dns=none in NetworkManager.conf
      ansible.builtin.lineinfile:
        path: /etc/NetworkManager/NetworkManager.conf
        insertafter: '^\[main\]'
        line: "dns=none"
      when: nm_conf.stat.exists  
      tags:
      - dns

    - name: Restart NetworkManager service
      service:
        name: NetworkManager
        state: restarted
        enabled: yes
      ignore_errors: yes 
      register: result
      tags:
      - dns

    - name: Print message if NetworkManager service does not exist 
      debug: 
        msg: "NetworkManager service does not exist. Skipping service restart" 
      when: result.failed
      tags:
      - dns

    # - name: Add server entry for NTP in ntp.conf
    #   ansible.builtin.lineinfile:
    #     dest: /etc/ntp.conf
    #     line: '{{ item }}'
    #   with_items:
    #     - 'server 10.17.38.11'
    #     - 'server 10.17.38.12'
    #   ignore_errors: yes  
    #   tags:
    #   - ntp  
    
    # - name: Poll the NTP Server
    #   shell: ntpdate -u wal-dev-dc01.dev.rocketsoftware.com
    #   ignore_errors: yes
    #   tags:
    #   - ntp  

    # - name: Restart ntpd service
    #   service:
    #     name: ntpd
    #     state: restarted
    #     enabled: yes
    #   ignore_errors: yes  
    #   tags:
    #   - ntp  

    # - name: Add server entry for Chrony in chrony.conf
    #   ansible.builtin.lineinfile:
    #     dest: /etc/chrony.conf
    #     regexp: '^server 3'
    #     insertafter: '^#server 3.rhel.pool.ntp.org iburst'
    #     line: '{{ item }}'
    #   with_items:
    #     - 'server 10.17.38.11'
    #     - 'server 10.17.38.12'  
    #   tags:
    #   - chrony

    # - name: Restart chronyd service
    #   service:
    #     name: chronyd
    #     state: restarted
    #     enabled: yes
    #   tags:
    #   - chrony